apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"
    defaultConfig {
        applicationId "app.attestation.auditor"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 29
        versionName versionCode.toString()
        resConfigs "en"
    }
    signingConfigs {
        release
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    aaptOptions {
        noCompress "dex"
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.biometric:biometric:1.1.0'
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'com.google.guava:guava:30.1.1-android'
    implementation 'com.google.zxing:core:3.4.1'
    implementation 'org.bouncycastle:bcpkix-jdk15to18:1.69'

    implementation 'androidx.camera:camera-core:1.1.0-alpha06'
    implementation 'androidx.camera:camera-camera2:1.1.0-alpha06'
    implementation 'androidx.camera:camera-lifecycle:1.1.0-alpha08'
    implementation 'androidx.camera:camera-view:1.0.0-alpha26'
}

def props = new Properties()
def propFile = new File('signing.properties')

if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null &&
            props.containsKey('STORE_FILE')     &&
            props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS')      &&
            props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = rootProject.file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        println 'signing.properties found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'signing.properties not found'
    android.buildTypes.release.signingConfig = null
}
